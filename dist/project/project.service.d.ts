import { ecofield, project, record, work, worker_role } from './entity/project.entity';
import { Repository } from 'typeorm';
import { ProjectDto, workDto, addWorkerDto, ecofieldDto } from './dto/project.dto';
import { workerListOutputDto, projectOutputDto, workListOutputDto, projectListOutputDto, workOutputDto, markerInfoDto, recordOutputDto, workerPositionListDto, ecofieldListOutputDto, ecofieldOutputDto } from './dto/project.output.dto';
import { User } from 'src/user/entity/user.entity';
import { CoreOutput } from 'src/common/dto/output.dto';
export declare class ProjectService {
    private readonly project;
    private readonly worker_role;
    private readonly work;
    private readonly user;
    private readonly record;
    private readonly ecofield;
    constructor(project: Repository<project>, worker_role: Repository<worker_role>, work: Repository<work>, user: Repository<User>, record: Repository<record>, ecofield: Repository<ecofield>);
    createProject(project: ProjectDto): Promise<projectOutputDto>;
    deleteProject(project_id: number): Promise<CoreOutput>;
    getProjectList(user_id: number): Promise<projectListOutputDto>;
    addworker(worker: addWorkerDto): Promise<void>;
    getWorkerList(project_id: number): Promise<workerListOutputDto>;
    saveWork(work: workDto): Promise<workListOutputDto>;
    recordWork(work: workDto): Promise<CoreOutput>;
    getRecordWork(id: number): Promise<recordOutputDto>;
    getRecordProject(id: number): Promise<recordOutputDto>;
    deleteWork(id: number): Promise<CoreOutput>;
    getWorksProjectUser(project_id: number, user: number): Promise<workListOutputDto>;
    getWorkListUser(id: number): Promise<workListOutputDto>;
    getWorkerPositionListUser(id: number): Promise<workerPositionListDto>;
    getWork(id: number): Promise<workOutputDto>;
    getMarkerInfo(userID: number, workerID: number): Promise<markerInfoDto>;
    saveEcofield(ecofields: ecofieldDto): Promise<CoreOutput>;
    getEcoListProject(project_id: number): Promise<ecofieldListOutputDto>;
    getEcoListUser(id: number): Promise<ecofieldListOutputDto>;
    getEcoInfo(id: number): Promise<ecofieldOutputDto>;
    check(): Promise<boolean>;
}
